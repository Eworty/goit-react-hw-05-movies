{"version":3,"file":"static/js/63.e6ced91a.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/CastItem/CastItem.module.css?aa36","components/Cast/CastItem/CastItem.jsx","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/moviesAPI.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CastItem_item__-EXbK\"};","import { moviesAPI } from 'services/moviesAPI';\nimport defaultImgM from '../../../images/defaultProfileM.png';\nimport defaultImgF from '../../../images/defaultProfileF.png';\nimport css from './CastItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst CastItem = ({ name, character, img, gender }) => {\n  const defaultImg = gender === 1 ? defaultImgF : defaultImgM;\n\n  const imgPath = img ? `${moviesAPI.imgBaseURL}${img}` : defaultImg;\n\n  return (\n    <li className={css.item}>\n      <img src={imgPath} alt={name} width={120} />\n      <h3>{name}</h3>\n      <p>\n        <span className={css.accent}>Character: </span>\n        {character ? ` ${character}` : ' unknown'}\n      </p>\n    </li>\n  );\n};\n\nCastItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string,\n  img: PropTypes.string,\n  gender: PropTypes.number.isRequired,\n};\n\nexport default CastItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"cast-list\":\"Cast_cast-list__ond-A\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { moviesAPI } from 'services/moviesAPI';\n\nimport Loader from 'components/Loader/Loader';\nimport CastItem from './CastItem/CastItem';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const { cast } = await moviesAPI.getCast(movieId, signal);\n\n        if (cast.length === 0) {\n          setError(\"Cast of this movie wasn't found. Please try again later.\");\n          return;\n        }\n\n        setCast(cast);\n      } catch (error) {\n        if (error.name === 'AbortError') {\n          console.log('abort error');\n        } else {\n          console.log(error);\n          setError('Something went wrong... Please, try again later.');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n\n    return () => controller.abort();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <div>{error}</div>}\n      {cast.length !== 0 && (\n        <ul className={css['cast-list']}>\n          {cast\n            .filter(({ known_for_department: role }) => role === 'Acting')\n            .map(({ name, character, profile_path: img, gender }) => (\n              <CastItem\n                name={name}\n                character={character}\n                img={img}\n                gender={gender}\n                key={name + character}\n              />\n            ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","const API_KEY = '61a6b843c58046eb2a3a15bde4cbc7b9';\nconst imgBaseURL = 'https://image.tmdb.org/t/p/w500';\n\nconst fetchTrending = async signal => {\n  const fetchURL = `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`;\n\n  const response = await fetch(fetchURL, { signal });\n\n  if (!response.ok) throw new Error(response.status);\n\n  const data = await response.json();\n  return data;\n};\n\nconst fetchMovieByQuery = async (query, signal) => {\n  const fetchURL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n\n  const response = await fetch(fetchURL, { signal });\n\n  if (!response.ok) throw new Error(response.status);\n\n  const data = await response.json();\n  return data;\n};\n\nconst fetchMovieDetails = async (movieID, signal) => {\n  const fetchURL = `https://api.themoviedb.org/3/movie/${movieID}?api_key=${API_KEY}&language=en-US`;\n\n  const response = await fetch(fetchURL, { signal });\n\n  if (!response.ok) throw new Error(response.status);\n\n  const data = await response.json();\n  return data;\n};\n\nconst fetchMovieCast = async (movieID, signal) => {\n  const fetchURL = `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=${API_KEY}&language=en-US`;\n\n  const response = await fetch(fetchURL, { signal });\n\n  if (!response.ok) throw new Error(response.status);\n\n  const data = await response.json();\n  return data;\n};\n\nconst fetchMovieReviews = async (movieID, signal) => {\n  const fetchURL = `https://api.themoviedb.org/3/movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n\n  const response = await fetch(fetchURL, { signal });\n\n  if (!response.ok) throw new Error(response.status);\n\n  const data = await response.json();\n  return data;\n};\n\nexport const moviesAPI = {\n  getTrending: fetchTrending,\n  getMovies: fetchMovieByQuery,\n  getDetails: fetchMovieDetails,\n  getCast: fetchMovieCast,\n  getReviews: fetchMovieReviews,\n  imgBaseURL,\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["name","character","img","defaultImg","gender","imgPath","moviesAPI","className","css","src","alt","width","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","controller","AbortController","signal","fetchData","length","console","log","abort","Loader","filter","known_for_department","map","profile_path","API_KEY","fetchTrending","fetchURL","fetch","response","ok","Error","status","json","data","fetchMovieByQuery","query","fetchMovieDetails","movieID","fetchMovieCast","fetchMovieReviews","getTrending","getMovies","getDetails","getCast","getReviews","imgBaseURL","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}