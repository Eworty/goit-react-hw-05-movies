{"version":3,"file":"static/js/415.464db07b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieListItem/MovieListItem.module.css?166d","components/MovieList/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","services/moviesAPI.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie-list\":\"MovieList_movie-list__vTqZL\"};","// extracted by mini-css-extract-plugin\nexport default {\"movie-list__item\":\"MovieListItem_movie-list__item__x0-A3\",\"movie-card\":\"MovieListItem_movie-card__T0y2W\",\"item-info\":\"MovieListItem_item-info__S9TK9\"};","import { Link, useLocation } from 'react-router-dom';\n\nimport { moviesAPI } from 'services/moviesAPI';\nimport defaultImg from '../../../images/defaultPoster.jpg';\nimport css from './MovieListItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst MovieListItem = ({\n  poster,\n  name,\n  title,\n  releaseDate,\n  commonDate,\n  id,\n}) => {\n  const location = useLocation();\n\n  const posterPath = poster ? `${moviesAPI.imgBaseURL}${poster}` : defaultImg;\n\n  const year =\n    releaseDate || commonDate\n      ? (releaseDate || commonDate).slice(0, 4)\n      : 'unknown';\n\n  return (\n    <li key={id} className={css['movie-list__item']}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div className={css['movie-card']}>\n          <div className={css.thumb}>\n            <img\n              src={posterPath}\n              alt={title || name}\n              width={240}\n              className={css['item-img']}\n            />\n          </div>\n          <div className={css['item-info']}>\n            <h2 className={css['item-title']}>{title || name}</h2>\n            <p className={css['item-year']}>{year}</p>\n          </div>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nMovieListItem.propTypes = {\n  poster: PropTypes.string,\n  name: PropTypes.string,\n  title: PropTypes.string,\n  id: PropTypes.number.isRequired,\n  releaseDate: PropTypes.string,\n  commonDate: PropTypes.string,\n};\n\nexport default MovieListItem;\n","import css from './MovieList.module.css';\nimport MovieListItem from './MovieListItem/MovieListItem';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <ul className={css['movie-list']}>\n      {movies.map(\n        ({ id, poster_path, name, title, release_date, first_air_date }) => (\n          <MovieListItem\n            key={id}\n            id={id}\n            poster={poster_path}\n            name={name}\n            title={title}\n            releaseDate={release_date}\n            commonDate={first_air_date}\n          />\n        )\n      )}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      name: PropTypes.string,\n      title: PropTypes.string,\n      release_date: PropTypes.string,\n      first_air_date: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import { moviesAPI } from 'services/moviesAPI';\nimport { useEffect, useState } from 'react';\nimport MovieList from '../components/MovieList/MovieList';\nimport Loader from '../components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const data = await moviesAPI.getTrending(signal);\n        setMovies(data.results);\n      } catch (error) {\n        if (error.name === 'AbortError') {\n          console.log('abort error');\n        } else {\n          console.log(error);\n          setError('Something went wrong... Please, try again later.');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n\n    return () => controller.abort();\n  }, []);\n\n  return (\n    <section style={{ padding: 20 }}>\n      <h1 className=\"visually-hidden\">Popular movies</h1>\n      {isLoading && <Loader />}\n      {error && <div>{error}</div>}\n      {movies && <MovieList movies={movies} />}\n    </section>\n  );\n};\n\nexport default Home;\n","const API_KEY = '61a6b843c58046eb2a3a15bde4cbc7b9';\nconst imgBaseURL = 'https://image.tmdb.org/t/p/w500';\n\nconst fetchTrending = async signal => {\n  const fetchURL = `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`;\n\n  const response = await fetch(fetchURL, { signal });\n\n  if (!response.ok) throw new Error(response.status);\n\n  const data = await response.json();\n  return data;\n};\n\nconst fetchMovieByQuery = async (query, signal) => {\n  const fetchURL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n\n  const response = await fetch(fetchURL, { signal });\n\n  if (!response.ok) throw new Error(response.status);\n\n  const data = await response.json();\n  return data;\n};\n\nconst fetchMovieDetails = async (movieID, signal) => {\n  const fetchURL = `https://api.themoviedb.org/3/movie/${movieID}?api_key=${API_KEY}&language=en-US`;\n\n  const response = await fetch(fetchURL, { signal });\n\n  if (!response.ok) throw new Error(response.status);\n\n  const data = await response.json();\n  return data;\n};\n\nconst fetchMovieCast = async (movieID, signal) => {\n  const fetchURL = `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=${API_KEY}&language=en-US`;\n\n  const response = await fetch(fetchURL, { signal });\n\n  if (!response.ok) throw new Error(response.status);\n\n  const data = await response.json();\n  return data;\n};\n\nconst fetchMovieReviews = async (movieID, signal) => {\n  const fetchURL = `https://api.themoviedb.org/3/movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n\n  const response = await fetch(fetchURL, { signal });\n\n  if (!response.ok) throw new Error(response.status);\n\n  const data = await response.json();\n  return data;\n};\n\nexport const moviesAPI = {\n  getTrending: fetchTrending,\n  getMovies: fetchMovieByQuery,\n  getDetails: fetchMovieDetails,\n  getCast: fetchMovieCast,\n  getReviews: fetchMovieReviews,\n  imgBaseURL,\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["poster","name","title","releaseDate","commonDate","id","location","useLocation","posterPath","moviesAPI","defaultImg","year","slice","className","css","to","state","from","src","alt","width","movies","map","poster_path","release_date","first_air_date","useState","setMovies","error","setError","isLoading","setIsLoading","useEffect","controller","AbortController","signal","fetchData","data","results","console","log","abort","style","padding","API_KEY","fetchTrending","fetchURL","fetch","response","ok","Error","status","json","fetchMovieByQuery","query","fetchMovieDetails","movieID","fetchMovieCast","fetchMovieReviews","getTrending","getMovies","getDetails","getCast","getReviews","imgBaseURL","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}